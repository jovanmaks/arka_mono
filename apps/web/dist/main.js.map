{
  "version": 3,
  "sources": ["../app/main.tsx", "../app/App.tsx", "../app/Scene.tsx", "../../../packages/lib/mod.ts"],
  "sourcesContent": ["// apps/web/src/main.tsx\r\nimport React from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\nimport App from \"./App.tsx\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nif (!rootElement) throw new Error(\"Root element not found\");\r\nconst root = createRoot(rootElement);\r\nroot.render(React.createElement(App));\r\n", "// apps/web/src/App.tsxyy\r\n\r\n// deno-lint-ignore no-unused-vars\r\nimport React from \"https://esm.sh/react@18.2.0\"; // Add this line\r\nimport Scene from \"./Scene.tsx\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div style={{ width: \"100vw\", height: \"100vh\" }}>\r\n      <h1>Hello from Deno + React + R3F</h1>\r\n      <Scene />\r\n    </div>\r\n  );\r\n}\r\n", "// apps/web/src/Scene.tsx\r\n\r\n// deno-lint-ignore no-unused-vars\r\nimport React, { useRef } from \"https://esm.sh/react@18.2.0\";\r\nimport { Canvas, MeshProps, useFrame } from \"https://esm.sh/@react-three/fiber@8.13.5\";\r\nimport * as THREE from \"https://esm.sh/three@0.154.0\";\r\nimport { calculateBoxVolume } from \"../../../packages/lib/mod.ts\";\r\n\r\nfunction SpinningBox(props: MeshProps) {\r\n  const ref = useRef<THREE.Mesh>(null!);\r\n\r\n  useFrame(() => {\r\n    if (ref.current) {\r\n      ref.current.rotation.x += 0.01;\r\n      ref.current.rotation.y += 0.01;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <mesh ref={ref} {...props}>\r\n      <boxGeometry args={[1, 1, 1]} />\r\n      <meshStandardMaterial color=\"hotpink\" />\r\n    </mesh>\r\n  );\r\n}\r\n\r\nexport default function Scene() {\r\n  console.log(\"Volume of a 1x2x3 box:\", calculateBoxVolume(1, 2, 3));\r\n  return (\r\n    <Canvas>\r\n      <ambientLight />\r\n      <pointLight position={[10, 10, 10]} />\r\n      <SpinningBox position={[0, 0, 0]} />\r\n    </Canvas>\r\n  );\r\n}\r\n\r\n", "// packages/lib/mod.ts\r\nexport function greet(name: string): string {\r\n  return `Hello, ${name}!`;\r\n}\r\n\r\n// Example: A helper function for geometry calculations\r\nexport function calculateBoxVolume(width: number, height: number, depth: number): number {\r\n  return width * height * depth;\r\n}\r\n"],
  "mappings": "AACA,OAAOA,MAAW,QAClB,OAAS,cAAAC,MAAkB,mBCC3B,OAAOC,MAAW,8BCAlB,OAAOC,GAAS,UAAAC,MAAc,8BAC9B,OAAS,UAAAC,EAAmB,YAAAC,MAAgB,2CCErC,SAASC,EAAmBC,EAAeC,EAAgBC,EAAuB,CACvF,OAAOF,EAAQC,EAASC,CAC1B,CDAA,SAASC,EAAYC,EAAkB,CACrC,IAAMC,EAAMC,EAAmB,IAAK,EAEpC,OAAAC,EAAS,IAAM,CACTF,EAAI,UACNA,EAAI,QAAQ,SAAS,GAAK,IAC1BA,EAAI,QAAQ,SAAS,GAAK,IAE9B,CAAC,EAGCG,EAAA,cAAC,QAAK,IAAKH,EAAM,GAAGD,GAClBI,EAAA,cAAC,eAAY,KAAM,CAAC,EAAG,EAAG,CAAC,EAAG,EAC9BA,EAAA,cAAC,wBAAqB,MAAM,UAAU,CACxC,CAEJ,CAEe,SAARC,GAAyB,CAC9B,eAAQ,IAAI,yBAA0BC,EAAmB,EAAG,EAAG,CAAC,CAAC,EAE/DF,EAAA,cAACG,EAAA,KACCH,EAAA,cAAC,mBAAa,EACdA,EAAA,cAAC,cAAW,SAAU,CAAC,GAAI,GAAI,EAAE,EAAG,EACpCA,EAAA,cAACL,EAAA,CAAY,SAAU,CAAC,EAAG,EAAG,CAAC,EAAG,CACpC,CAEJ,CD7Be,SAARS,GAAuB,CAC5B,OACEC,EAAA,cAAC,OAAI,MAAO,CAAE,MAAO,QAAS,OAAQ,OAAQ,GAC5CA,EAAA,cAAC,UAAG,+BAA6B,EACjCA,EAAA,cAACC,EAAA,IAAM,CACT,CAEJ,CDRA,IAAMC,EAAc,SAAS,eAAe,MAAM,EAClD,GAAI,CAACA,EAAa,MAAM,IAAI,MAAM,wBAAwB,EAC1D,IAAMC,EAAOC,EAAWF,CAAW,EACnCC,EAAK,OAAOE,EAAM,cAAcC,CAAG,CAAC",
  "names": ["React", "createRoot", "React", "React", "useRef", "Canvas", "useFrame", "calculateBoxVolume", "width", "height", "depth", "SpinningBox", "props", "ref", "useRef", "useFrame", "React", "Scene", "calculateBoxVolume", "Canvas", "App", "React", "Scene", "rootElement", "root", "createRoot", "React", "App"]
}
