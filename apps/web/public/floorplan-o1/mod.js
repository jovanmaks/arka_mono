// Floorplan O1 Library - Built with esbuild
var S=(r=>(r.CORNER="corner",r.ENDPOINT="endpoint",r.T_JUNCTION="t_junction",r.INTERSECTION="intersection",r.UNCLASSIFIED="unclassified",r))(S||{});function O(e){let n=document.createElement("canvas");n.width=e.width,n.height=e.height;let o=n.getContext("2d");if(!o)throw new Error("Could not get canvas context");return o.drawImage(e,0,0),o.getImageData(0,0,n.width,n.height)}function T(e){return new Promise((n,o)=>{let t=new Image;t.crossOrigin="Anonymous",t.onload=()=>n(t),t.onerror=()=>o(new Error("Failed to load image")),typeof e=="string"?t.src=e:t.src=URL.createObjectURL(e)})}function $(e){let{width:n,height:o,data:t}=e,c=document.createElement("canvas");c.width=n,c.height=o;let a=c.getContext("2d").createImageData(n,o),g=a.data;for(let m=0;m<t.length;m+=4){let l=.299*t[m]+.587*t[m+1]+.114*t[m+2];g[m]=l,g[m+1]=l,g[m+2]=l,g[m+3]=t[m+3]}return a}function R(e,n=128,o=!0){let{width:t,height:c,data:r}=e,a=document.createElement("canvas");a.width=t,a.height=c;let m=a.getContext("2d").createImageData(t,c),l=m.data;for(let u=0;u<r.length;u+=4){let f=r[u]===r[u+1]&&r[u]===r[u+2]?r[u]:.299*r[u]+.587*r[u+1]+.114*r[u+2],d=o?f<n?255:0:f>n?255:0;l[u]=d,l[u+1]=d,l[u+2]=d,l[u+3]=255}return m}function z(e,n){n.width=e.width,n.height=e.height;let o=n.getContext("2d");if(!o)throw new Error("Could not get canvas context");o.putImageData(e,0,0)}function N(e,n){let o=n?.threshold||128,t=n?.inverse!==void 0?n.inverse:!0;return R(e,o,t)}function G(e,n=100){let{width:o,height:t,data:c}=e,r=new Uint8ClampedArray(c),a=(f,d)=>{if(f<0||d<0||f>=o||d>=t)return 0;let i=(d*o+f)*4;return r[i]>0?1:0},g=(f,d,i)=>{let s=(d*o+f)*4,h=i>0?255:0;r[s]=r[s+1]=r[s+2]=h},m=!0,l=0;for(;m&&l<n;){m=!1,l++;let f=[];for(let i=1;i<t-1;i++)for(let s=1;s<o-1;s++){if(a(s,i)===0)continue;let h=a(s,i-1),x=a(s+1,i-1),D=a(s+1,i),P=a(s+1,i+1),b=a(s,i+1),y=a(s-1,i+1),p=a(s-1,i),M=a(s-1,i-1),w=[h,x,D,P,b,y,p,M],C=w.reduce((I,E)=>I+E,0);if(C<2||C>6)continue;let L=0;for(let I=0;I<w.length;I++)w[I]===0&&w[(I+1)%w.length]===1&&L++;L===1&&h*D*b===0&&D*b*p===0&&f.push([s,i])}for(let[i,s]of f)g(i,s,0),m=!0;let d=[];for(let i=1;i<t-1;i++)for(let s=1;s<o-1;s++){if(a(s,i)===0)continue;let h=a(s,i-1),x=a(s+1,i-1),D=a(s+1,i),P=a(s+1,i+1),b=a(s,i+1),y=a(s-1,i+1),p=a(s-1,i),M=a(s-1,i-1),w=[h,x,D,P,b,y,p,M],C=w.reduce((I,E)=>I+E,0);if(C<2||C>6)continue;let L=0;for(let I=0;I<w.length;I++)w[I]===0&&w[(I+1)%w.length]===1&&L++;L===1&&h*D*p===0&&h*b*p===0&&d.push([s,i])}for(let[i,s]of d)g(i,s,0),m=!0}console.log(`[DEBUG] Thinning completed after ${l} iterations`);let u=new Uint8ClampedArray(r);return new ImageData(u,o,t)}async function q(e,n){let o=e instanceof HTMLImageElement?e:await T(e),t=o.width,c=o.height;console.log(`[DEBUG] Original (H\xD7W): ${c} \xD7 ${t}`);let r=O(o),a=n?.threshold??128,g=n?.inverse??!0,m=N(r,{threshold:a,inverse:g});console.log("[DEBUG] After preprocessing (grayscale + threshold)");let l=n?.maxIterations??100,u=G(m,l);return console.log("[DEBUG] After thinning with Zhang-Suen algorithm"),{skeleton:u,originalWidth:t,originalHeight:c,debugInfo:{thresholdValue:a,algorithm:"Zhang-Suen thinning algorithm"}}}function Y(e,n={}){let{width:o,height:t,data:c}=e,r=[],a=n.minNeighbors??3,g=n.minTransitions??2,m=(l,u)=>{if(l<=1||u<=1||l>=o-2||u>=t-2)return!1;let f=(u*o+l)*4;if(c[f]===0)return!1;let d=0,i=0,s=[];for(let h=-1;h<=1;h++)for(let x=-1;x<=1;x++){if(x===0&&h===0)continue;let D=l+x,b=((u+h)*o+D)*4,y=c[b]>0?1:0;s.push(y),y===1&&d++}for(let h=0;h<s.length;h++)s[h]===0&&s[(h+1)%8]===1&&i++;return d>=a&&i>=g};for(let l=2;l<t-2;l++)for(let u=2;u<o-2;u++)m(u,l)&&r.push({x:u,y:l});return console.log(`[DEBUG] Detected ${r.length} corner candidates`),r}function Z(e,n={}){if(e.length===0)return[];let o=n.maxDistance??10,t=e.map(r=>[r]),c=!0;for(;c;){c=!1;for(let r=0;r<t.length;r++)if(t[r])for(let a=r+1;a<t.length;a++){if(!t[a])continue;t[r].some(m=>t[a].some(l=>{let u=m.x-l.x,f=m.y-l.y;return Math.sqrt(u*u+f*f)<=o}))&&(t[r]=t[r].concat(t[a]),t[a]=null,c=!0)}c&&(t=t.filter(r=>r!==null))}return t.map(r=>{let a=r.reduce((m,l)=>m+l.x,0),g=r.reduce((m,l)=>m+l.y,0);return{x:Math.round(a/r.length),y:Math.round(g/r.length)}})}function _(e,n={}){let{width:o,height:t,data:c}=e,r=[],a=n.threshold??30,g=n.minLineLength??20,m=n.maxLineGap??5,l=n.maxDistance??5,u=[];for(let i=0;i<t;i++)for(let s=0;s<o;s++){let h=(i*o+s)*4;c[h]>0&&u.push({x:s,y:i})}let f=Math.PI/180;for(let i=0;i<u.length;i++){let s=u[i];for(let h=0;h<180;h++){let x=h*f,D=Math.cos(x),P=Math.sin(x),b=[];b.push(s);for(let y=0;y<u.length;y++){if(i===y)continue;let p=u[y],M=p.x-s.x,w=p.y-s.y;Math.abs(-P*p.x+D*p.y-(-P*s.x+D*s.y))<=l&&b.push(p)}if(b.length>=a){b.sort((L,I)=>(L.x-s.x)*D+(L.y-s.y)*P-((I.x-s.x)*D+(I.y-s.y)*P));let y=b[0],p=b[b.length-1],M=p.x-y.x,w=p.y-y.y;Math.sqrt(M*M+w*w)>=g&&r.push({x1:y.x,y1:y.y,x2:p.x,y2:p.y})}}}let d=[];for(let i of r)d.some(h=>{let x=Math.hypot(h.x1-i.x1,h.y1-i.y1)+Math.hypot(h.x2-i.x2,h.y2-i.y2),D=Math.hypot(h.x1-i.x2,h.y1-i.y2)+Math.hypot(h.x2-i.x1,h.y2-i.y1);return x<=m*2||D<=m*2})||d.push(i);return console.log(`[DEBUG] Detected ${d.length} line segments`),d}function A(e,n){let{x1:o,y1:t,x2:c,y2:r}=e,{x1:a,y1:g,x2:m,y2:l}=n,u=(o-c)*(g-l)-(t-r)*(a-m);if(Math.abs(u)<1e-6)return null;let f=((o*r-t*c)*(a-m)-(o-c)*(a*l-g*m))/u,d=((o*r-t*c)*(g-l)-(t-r)*(a*l-g*m))/u,i=(s,h,x)=>s>=Math.min(h,x)-1e-6&&s<=Math.max(h,x)+1e-6;return i(f,o,c)&&i(d,t,r)&&i(f,a,m)&&i(d,g,l)?{x:f,y:d}:null}function nt(e){let n=[];for(let o=0;o<e.length;o++)for(let t=o+1;t<e.length;t++){let c=A(e[o],e[t]);c&&(c.type="intersection",n.push(c))}return console.log(`[DEBUG] Found ${n.length} line intersections`),n}function et(e){let n=[];for(let o of e)n.push({x:o.x1,y:o.y1,type:"endpoint"}),n.push({x:o.x2,y:o.y2,type:"endpoint"});return n}function ot(e,n,o=[]){return[...e,...n,...o]}function U(e,n,o,t,c,r){if(n<0||o<0||n>=e.width||o>=e.height)return;let a=(o*e.width+n)*4;e.data[a]=t,e.data[a+1]=c,e.data[a+2]=r}function v(e,n,o=3,t=[255,0,0]){let c=Math.floor(o/2);for(let r=-c;r<=c;r++)for(let a=-c;a<=c;a++){let g=a===0&&r===0?255:180,[m,l,u]=t.map(f=>Math.min(255,f*g/255));U(e,n.x+a,n.y+r,m,l,u)}}function k(e,n,o,t,c,r=[0,0,255]){let[a,g,m]=r,l=Math.abs(t-n),u=Math.abs(c-o),f=n<t?1:-1,d=o<c?1:-1,i=l-u,s=n,h=o;for(;U(e,s,h,a,g,m),!(s===t&&h===c);){let x=2*i;x>-u&&(i-=u,s+=f),x<l&&(i+=l,h+=d)}}function H(e,n,o=!1){let t=o?e:new ImageData(new Uint8ClampedArray(e.data),e.width,e.height);for(let c of n)v(t,c,3,[255,0,0]);return t}function B(e,n,o=!1){let t=o?e:new ImageData(new Uint8ClampedArray(e.data),e.width,e.height);for(let c of n)v(t,c,5,[0,255,0]);return t}function F(e,n,o=!1){let t=o?e:new ImageData(new Uint8ClampedArray(e.data),e.width,e.height);for(let{x1:c,y1:r,x2:a,y2:g}of n)k(t,Math.round(c),Math.round(r),Math.round(a),Math.round(g),[0,0,255]);return t}function it(e,n,o=!1){let t=o?e:new ImageData(new Uint8ClampedArray(e.data),e.width,e.height);if(n.lines&&F(t,n.lines,!0),n.corners&&H(t,n.corners,!0),n.intersections)for(let c of n.intersections)v(t,c,3,[255,0,255]);return n.clusters&&B(t,n.clusters,!0),t}export{S as PointType,Z as clusterPoints,ot as combineFeaturePoints,$ as convertToGrayscale,Y as detectCorners,_ as detectStraightLines,B as drawClusteredPoints,H as drawCorners,F as drawLines,et as extractEndpoints,nt as findIntersections,O as imageToImageData,A as intersectLines,T as loadImage,N as preprocessImage,z as renderImageDataToCanvas,q as skeletonizeImage,R as thresholdImage,it as visualizeFeatures,G as zhangSuenThinning};
//# sourceMappingURL=mod.js.map
