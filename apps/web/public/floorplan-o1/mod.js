// Floorplan O1 Library - Built with esbuild
var O=(n=>(n.CORNER="corner",n.ENDPOINT="endpoint",n.T_JUNCTION="t_junction",n.INTERSECTION="intersection",n.UNCLASSIFIED="unclassified",n))(O||{});function R(e){let t=document.createElement("canvas");t.width=e.width,t.height=e.height;let r=t.getContext("2d");if(!r)throw new Error("Could not get canvas context");return r.drawImage(e,0,0),r.getImageData(0,0,t.width,t.height)}function U(e){return new Promise((t,r)=>{let a=new Image;a.crossOrigin="Anonymous",a.onload=()=>t(a),a.onerror=()=>r(new Error("Failed to load image")),typeof e=="string"?a.src=e:a.src=URL.createObjectURL(e)})}function W(e){let{width:t,height:r,data:a}=e,s=document.createElement("canvas");s.width=t,s.height=r;let i=s.getContext("2d").createImageData(t,r),h=i.data;for(let l=0;l<a.length;l+=4){let m=.299*a[l]+.587*a[l+1]+.114*a[l+2];h[l]=m,h[l+1]=m,h[l+2]=m,h[l+3]=a[l+3]}return i}function F(e,t=128,r=!0){let{width:a,height:s,data:n}=e,i=document.createElement("canvas");i.width=a,i.height=s;let l=i.getContext("2d").createImageData(a,s),m=l.data;for(let u=0;u<n.length;u+=4){let p=n[u]===n[u+1]&&n[u]===n[u+2]?n[u]:.299*n[u]+.587*n[u+1]+.114*n[u+2],g=r?p<t?255:0:p>t?255:0;m[u]=g,m[u+1]=g,m[u+2]=g,m[u+3]=255}return l}function X(e,t){t.width=e.width,t.height=e.height;let r=t.getContext("2d");if(!r)throw new Error("Could not get canvas context");r.putImageData(e,0,0)}function A(e,t){let r=t?.threshold||128,a=t?.inverse!==void 0?t.inverse:!0;return F(e,r,a)}function G(e,t=100){let{width:r,height:a,data:s}=e,n=new Uint8ClampedArray(s),i=(p,g)=>{if(p<0||g<0||p>=r||g>=a)return 0;let o=(g*r+p)*4;return n[o]>0?1:0},h=(p,g,o)=>{let c=(g*r+p)*4,f=o>0?255:0;n[c]=n[c+1]=n[c+2]=f},l=!0,m=0;for(;l&&m<t;){l=!1,m++;let p=[];for(let o=1;o<a-1;o++)for(let c=1;c<r-1;c++){if(i(c,o)===0)continue;let f=i(c,o-1),d=i(c+1,o-1),y=i(c+1,o),P=i(c+1,o+1),x=i(c,o+1),I=i(c-1,o+1),b=i(c-1,o),C=i(c-1,o-1),D=[f,d,y,P,x,I,b,C],E=D.reduce((T,M)=>T+M,0);if(E<2||E>6)continue;let N=0;for(let T=0;T<D.length;T++)D[T]===0&&D[(T+1)%D.length]===1&&N++;N===1&&f*y*x===0&&y*x*b===0&&p.push([c,o])}for(let[o,c]of p)h(o,c,0),l=!0;let g=[];for(let o=1;o<a-1;o++)for(let c=1;c<r-1;c++){if(i(c,o)===0)continue;let f=i(c,o-1),d=i(c+1,o-1),y=i(c+1,o),P=i(c+1,o+1),x=i(c,o+1),I=i(c-1,o+1),b=i(c-1,o),C=i(c-1,o-1),D=[f,d,y,P,x,I,b,C],E=D.reduce((T,M)=>T+M,0);if(E<2||E>6)continue;let N=0;for(let T=0;T<D.length;T++)D[T]===0&&D[(T+1)%D.length]===1&&N++;N===1&&f*y*b===0&&f*x*b===0&&g.push([c,o])}for(let[o,c]of g)h(o,c,0),l=!0}console.log(`[DEBUG] Thinning completed after ${m} iterations`);let u=new Uint8ClampedArray(n);return new ImageData(u,r,a)}async function V(e,t){let r=e instanceof HTMLImageElement?e:await U(e),a=r.width,s=r.height;console.log(`[DEBUG] Original (H\xD7W): ${s} \xD7 ${a}`);let n=R(r),i=t?.threshold??128,h=t?.inverse??!0,l=A(n,{threshold:i,inverse:h});console.log("[DEBUG] After preprocessing (grayscale + threshold)");let m=t?.maxIterations??100,u=G(l,m);return console.log("[DEBUG] After thinning with Zhang-Suen algorithm"),{skeleton:u,originalWidth:a,originalHeight:s,debugInfo:{thresholdValue:i,algorithm:"Zhang-Suen thinning algorithm"}}}function k(e){let t=e.reduce((s,n)=>s+n,0),r=0;for(let s=0;s<e.length;s++)e[s]===0&&e[(s+1)%e.length]===1&&r++;let a=e.join("")+e[0];if(t===1)return"endpoint";if(t===2){if(r===2){for(let n=0;n<e.length;n++)if(e[n]===1&&e[(n+1)%8]===1)return"unclassified";return"corner"}if(["10000100","01000010","00100001","00010001"].some(n=>a.includes(n)))return"corner"}if(t===3){if(r===2)return"t_junction";if(["10001000","01000100","00100010","00010001"].some(n=>a.includes(n)))return"t_junction"}return t>=4&&r>=2?"intersection":"unclassified"}function B(e,t,r){let{width:a,height:s,data:n}=e;if(t<1||r<1||t>=a-1||r>=s-1)return[];let i=[],h=[[-1,-1],[0,-1],[1,-1],[1,0],[1,1],[0,1],[-1,1],[-1,0]];for(let[l,m]of h){let u=t+l,g=((r+m)*a+u)*4;i.push(n[g]>0?1:0)}return i}function rt(e,t={}){let{width:r,height:a,data:s}=e,n=[],i=t.minNeighbors??1,h=t.minTransitions??1,l=t.includeTypes??["corner","t_junction","endpoint","intersection"];for(let m=1;m<a-1;m++)for(let u=1;u<r-1;u++){let p=(m*r+u)*4;if(s[p]===0)continue;let g=B(e,u,m);if(g.length===0||g.reduce((d,y)=>d+y,0)<i)continue;let c=0;for(let d=0;d<g.length;d++)g[d]===0&&g[(d+1)%8]===1&&c++;if(c<h)continue;let f=k(g);l.includes(f)&&n.push({x:u,y:m,type:f})}return console.log(`[DEBUG] Detected ${n.length} corner candidates`),n}function it(e,t={}){if(e.length===0)return[];let r=t.maxDistance??10,a=t.distanceThreshold??30,s=t.minClusterSize??1,n=t.preserveTypes??!0,i={};if(n)for(let l of e){let m=l.type||"unclassified";i[m]||(i[m]=[]),i[m].push(l)}else i.all=e;let h=[];for(let l in i){let u=i[l].map(o=>[o]),p=!0;for(;p;){p=!1;for(let o=0;o<u.length;o++)if(u[o])for(let c=o+1;c<u.length;c++){if(!u[c])continue;u[o].some(d=>u[c].some(y=>{let P=d.x-y.x,x=d.y-y.y;return Math.sqrt(P*P+x*x)<=r}))&&(u[o]=u[o].concat(u[c]),u[c]=null,p=!0)}p&&(u=u.filter(o=>o!==null))}let g=u.filter(o=>o.length>=s).map(o=>{let c=o.reduce((x,I)=>x+I.x,0),f=o.reduce((x,I)=>x+I.y,0),d={};for(let x of o){let I=x.type||"unclassified";d[I]=(d[I]||0)+1}let y="unclassified",P=0;for(let x in d)d[x]>P&&(P=d[x],y=x);return{x:Math.round(c/o.length),y:Math.round(f/o.length),type:y,count:o.length}});h.push(...g)}return console.log(`[DEBUG] Clustered into ${h.length} points`),h}function st(e,t={}){let{width:r,height:a,data:s}=e,n=[],i=t.threshold??30,h=t.minLineLength??20,l=t.maxLineGap??5,m=t.maxDistance??5,u=[];for(let o=0;o<a;o++)for(let c=0;c<r;c++){let f=(o*r+c)*4;s[f]>0&&u.push({x:c,y:o})}let p=Math.PI/180;for(let o=0;o<u.length;o++){let c=u[o];for(let f=0;f<180;f++){let d=f*p,y=Math.cos(d),P=Math.sin(d),x=[];x.push(c);for(let I=0;I<u.length;I++){if(o===I)continue;let b=u[I],C=b.x-c.x,D=b.y-c.y;Math.abs(-P*b.x+y*b.y-(-P*c.x+y*c.y))<=m&&x.push(b)}if(x.length>=i){x.sort((N,T)=>(N.x-c.x)*y+(N.y-c.y)*P-((T.x-c.x)*y+(T.y-c.y)*P));let I=x[0],b=x[x.length-1],C=b.x-I.x,D=b.y-I.y;Math.sqrt(C*C+D*D)>=h&&n.push({x1:I.x,y1:I.y,x2:b.x,y2:b.y})}}}let g=[];for(let o of n)g.some(f=>{let d=Math.hypot(f.x1-o.x1,f.y1-o.y1)+Math.hypot(f.x2-o.x2,f.y2-o.y2),y=Math.hypot(f.x1-o.x2,f.y1-o.y2)+Math.hypot(f.x2-o.x1,f.y2-o.y1);return d<=l*2||y<=l*2})||g.push(o);return console.log(`[DEBUG] Detected ${g.length} line segments`),g}function J(e,t){let{x1:r,y1:a,x2:s,y2:n}=e,{x1:i,y1:h,x2:l,y2:m}=t,u=(r-s)*(h-m)-(a-n)*(i-l);if(Math.abs(u)<1e-6)return null;let p=((r*n-a*s)*(i-l)-(r-s)*(i*m-h*l))/u,g=((r*n-a*s)*(h-m)-(a-n)*(i*m-h*l))/u,o=(c,f,d)=>c>=Math.min(f,d)-1e-6&&c<=Math.max(f,d)+1e-6;return o(p,r,s)&&o(g,a,n)&&o(p,i,l)&&o(g,h,m)?{x:p,y:g}:null}function mt(e){let t=[];for(let r=0;r<e.length;r++)for(let a=r+1;a<e.length;a++){let s=J(e[r],e[a]);s&&(s.type="intersection",t.push(s))}return console.log(`[DEBUG] Found ${t.length} line intersections`),t}function ht(e){let t=[];for(let r of e)t.push({x:r.x1,y:r.y1,type:"endpoint"}),t.push({x:r.x2,y:r.y2,type:"endpoint"});return t}function gt(e,t,r=[]){return[...e,...t,...r]}function v(e,t,r,a,s,n){if(t<0||r<0||t>=e.width||r>=e.height)return;let i=(r*e.width+t)*4;e.data[i]=a,e.data[i+1]=s,e.data[i+2]=n}function w(e,t,r=3,a=[255,0,0]){let s=r;if(t.type)switch(t.type){case"t_junction":case"intersection":s=Math.max(r*3,9);break;case"endpoint":s=Math.max(r*2,6);break}let n=Math.floor(s/2);for(let i=-n;i<=n;i++)for(let h=-n;h<=n;h++){let l=h===0&&i===0?255:180,[m,u,p]=a.map(g=>Math.min(255,g*l/255));v(e,t.x+h,t.y+i,m,u,p)}}function H(e,t,r,a,s,n=[0,0,255]){let[i,h,l]=n,m=Math.abs(a-t),u=Math.abs(s-r),p=t<a?1:-1,g=r<s?1:-1,o=m-u,c=t,f=r;for(;v(e,c,f,i,h,l),!(c===a&&f===s);){let d=2*o;d>-u&&(o-=u,c+=p),d<m&&(o+=m,f+=g)}}function S(e){switch(e){case"corner":return[255,0,0];case"t_junction":return[255,255,0];case"endpoint":return[173,216,230];case"intersection":return[255,255,0];case"unclassified":default:return[255,165,0]}}function L(e,t,r,a,s=[255,255,255]){let[n,i,h]=s;for(let l=0;l<5;l++)for(let m=0;m<5;m++)v(e,t+m,r+l,n,i,h)}function _(e,t,r=!1){let a=r?e:new ImageData(new Uint8ClampedArray(e.data),e.width,e.height);for(let s of t){let n=S(s.type);w(a,s,3,n)}return a}function j(e,t,r=!1,a=!1){let s=r?e:new ImageData(new Uint8ClampedArray(e.data),e.width,e.height);for(let n of t){let i=S(n.type),h=n.count?Math.min(5+Math.floor(n.count/3),10):5;w(s,n,h,i),a&&n.type&&L(s,n.x+6,n.y-6,n.type)}return s}function z(e,t,r=!1){let a=r?e:new ImageData(new Uint8ClampedArray(e.data),e.width,e.height);for(let{x1:s,y1:n,x2:i,y2:h}of t)H(a,Math.round(s),Math.round(n),Math.round(i),Math.round(h),[0,255,255]);return a}function yt(e,t,r=!1,a={}){let s=r?e:new ImageData(new Uint8ClampedArray(e.data),e.width,e.height);if(t.lines&&z(s,t.lines,!0),t.corners&&_(s,t.corners,!0),t.intersections)for(let l of t.intersections)w(s,l,3,S("intersection"));t.clusters&&j(s,t.clusters,!0,a.showLabels);let n=10,i=10,h=15;return t.clusters&&t.clusters.length>0&&(w(s,{x:n,y:i},5,S("corner")),L(s,n+10,i,"Corner (L)",[255,255,255]),i+=h,w(s,{x:n,y:i},5,S("t_junction")),L(s,n+10,i,"T-Junction",[255,255,255]),i+=h,w(s,{x:n,y:i},5,S("endpoint")),L(s,n+10,i,"Endpoint",[255,255,255]),i+=h,w(s,{x:n,y:i},5,S("intersection")),L(s,n+10,i,"Intersection",[255,255,255])),s}export{O as PointType,k as classifyJunctionType,it as clusterPoints,gt as combineFeaturePoints,W as convertToGrayscale,rt as detectCorners,st as detectStraightLines,j as drawClusteredPoints,_ as drawCorners,z as drawLines,ht as extractEndpoints,mt as findIntersections,R as imageToImageData,J as intersectLines,U as loadImage,A as preprocessImage,X as renderImageDataToCanvas,V as skeletonizeImage,F as thresholdImage,yt as visualizeFeatures,G as zhangSuenThinning};
//# sourceMappingURL=mod.js.map
