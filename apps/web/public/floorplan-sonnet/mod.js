// Floorplan Sonnet Library - Built with esbuild
function T(n){let o=document.createElement("canvas");o.width=n.width,o.height=n.height;let s=o.getContext("2d");if(!s)throw new Error("Could not get canvas context");return s.drawImage(n,0,0),s.getImageData(0,0,o.width,o.height)}function U(n){let{data:o,width:s,height:r}=n,t=new Uint8ClampedArray(s*r*4);for(let c=0;c<o.length;c+=4){let u=.299*o[c]+.587*o[c+1]+.114*o[c+2];t[c]=u,t[c+1]=u,t[c+2]=u,t[c+3]=o[c+3]}return new ImageData(t,s,r)}function L(n,o,s=!0){let{data:r,width:t,height:c}=n,u=new Uint8ClampedArray(t*c*4);for(let l=0;l<r.length;l+=4){let i=r[l],e=s?i<o?255:0:i>o?255:0;u[l]=e,u[l+1]=e,u[l+2]=e,u[l+3]=r[l+3]}return new ImageData(u,t,c)}function P(n,o=3){let{width:s,height:r}=n,t=new Uint8ClampedArray(s*r*4);t.set(n.data);let c=Math.floor(o/2),u=document.createElement("canvas");u.width=s,u.height=r;let l=u.getContext("2d");if(!l)throw new Error("Failed to get temporary canvas context");l.putImageData(n,0,0);let i=l.getImageData(0,0,s,r);for(let e=c;e<r-c;e++)for(let a=c;a<s-c;a++){let f=255;for(let d=-c;d<=c;d++)for(let m=-c;m<=c;m++){let g=((e+d)*s+(a+m))*4;f=Math.min(f,i.data[g])}let h=(e*s+a)*4;t[h]=f,t[h+1]=f,t[h+2]=f}return new ImageData(t,s,r)}function A(n,o=3){let{width:s,height:r}=n,t=new Uint8ClampedArray(s*r*4);t.set(n.data);let c=Math.floor(o/2),u=document.createElement("canvas");u.width=s,u.height=r;let l=u.getContext("2d");if(!l)throw new Error("Failed to get temporary canvas context");l.putImageData(n,0,0);let i=l.getImageData(0,0,s,r);for(let e=c;e<r-c;e++)for(let a=c;a<s-c;a++){let f=0;for(let d=-c;d<=c;d++)for(let m=-c;m<=c;m++){let g=((e+d)*s+(a+m))*4;f=Math.max(f,i.data[g])}let h=(e*s+a)*4;t[h]=f,t[h+1]=f,t[h+2]=f}return new ImageData(t,s,r)}function k(n,o=3){let s=P(n,o);return A(s,o)}function B(n,o=3){let s=A(n,o);return P(s,o)}function G(n){let{width:o,height:s}=n,r=new Uint8ClampedArray(o*s*4),t=new Uint8ClampedArray(n.data),c=!0;for(let i=0;i<t.length;i+=4)t[i]=t[i]>128?1:0,t[i+1]=t[i],t[i+2]=t[i],t[i+3]=255;let u=0,l=100;for(;c&&u<l;){c=!1;let i=[];for(let e=1;e<s-1;e++)for(let a=1;a<o-1;a++){let f=(e*o+a)*4;if(t[f]===0)continue;let h=((e-1)*o+a)*4,d=((e-1)*o+(a+1))*4,m=(e*o+(a+1))*4,g=((e+1)*o+(a+1))*4,y=((e+1)*o+a)*4,I=((e+1)*o+(a-1))*4,w=(e*o+(a-1))*4,M=((e-1)*o+(a-1))*4,x=[t[h],t[d],t[m],t[g],t[y],t[I],t[w],t[M]],b=x.reduce((p,C)=>p+C,0);if(b<2||b>6)continue;let D=0;for(let p=0;p<x.length;p++)x[p]===0&&x[(p+1)%x.length]===1&&D++;D===1&&t[h]*t[m]*t[y]===0&&t[m]*t[y]*t[w]===0&&(i.push(f),c=!0)}for(let e of i)t[e]=0,t[e+1]=0,t[e+2]=0;i.length=0;for(let e=1;e<s-1;e++)for(let a=1;a<o-1;a++){let f=(e*o+a)*4;if(t[f]===0)continue;let h=((e-1)*o+a)*4,d=((e-1)*o+(a+1))*4,m=(e*o+(a+1))*4,g=((e+1)*o+(a+1))*4,y=((e+1)*o+a)*4,I=((e+1)*o+(a-1))*4,w=(e*o+(a-1))*4,M=((e-1)*o+(a-1))*4,x=[t[h],t[d],t[m],t[g],t[y],t[I],t[w],t[M]],b=x.reduce((p,C)=>p+C,0);if(b<2||b>6)continue;let D=0;for(let p=0;p<x.length;p++)x[p]===0&&x[(p+1)%x.length]===1&&D++;D===1&&t[h]*t[m]*t[w]===0&&t[h]*t[y]*t[w]===0&&(i.push(f),c=!0)}for(let e of i)t[e]=0,t[e+1]=0,t[e+2]=0}for(let i=0;i<t.length;i+=4){let e=t[i]===1?255:0;r[i]=e,r[i+1]=e,r[i+2]=e,r[i+3]=255}return new ImageData(r,o,s)}async function V(n,o=100){let s=n instanceof HTMLImageElement?n:await H(n),r=s.width,t=s.height;console.log(`[DEBUG] Original (H\xD7W): ${t} \xD7 ${r}`);let c=T(s),u=U(c);console.log("[DEBUG] After grayscale conversion");let l=L(u,o,!0);console.log("[DEBUG] After threshold");let i=k(l,3);console.log("[DEBUG] After open");let e=B(i,3);console.log("[DEBUG] After close");let a=G(e);return console.log("[DEBUG] After thinning"),{skeleton:a,originalWidth:r,originalHeight:t,debugInfo:{thresholdValue:o}}}function H(n){return new Promise((o,s)=>{let r=new Image;r.onload=()=>o(r),r.onerror=()=>s(new Error("Failed to load image")),typeof n=="string"?r.src=n:r.src=URL.createObjectURL(n)})}function j(n,o){o.width=n.width,o.height=n.height;let s=o.getContext("2d");if(!s)throw new Error("Could not get canvas context");s.putImageData(n,0,0)}function E(n){let o;if(Array.isArray(n)){if(n.length!==3||n[0].length!==3)throw new Error("Neighborhood must be a 3x3 array");if((n[1][1]>0?1:0)===0)return"none";o=[n[0][1]>0?1:0,n[0][2]>0?1:0,n[1][2]>0?1:0,n[2][2]>0?1:0,n[2][1]>0?1:0,n[2][0]>0?1:0,n[1][0]>0?1:0,n[0][0]>0?1:0]}else{if(n.length!==36)throw new Error("Neighborhood must contain 9 pixels (36 values in RGBA format)");if((n[4*4+0]>0?1:0)===0)return"none";o=[n[4*1+0]>0?1:0,n[4*2+0]>0?1:0,n[4*5+0]>0?1:0,n[4*8+0]>0?1:0,n[4*7+0]>0?1:0,n[4*6+0]>0?1:0,n[4*3+0]>0?1:0,n[4*0+0]>0?1:0]}let s=o.reduce((t,c)=>t+c,0),r=0;for(let t=0;t<o.length;t++)o[t]===0&&o[(t+1)%o.length]===1&&r++;if(s===1)return"endpoint";if(r===2){if(s===2)return"corner";if(s===3)return"t_junction"}return"none"}function v(n,o,s){let{width:r,height:t,data:c}=n;if(o<1||s<1||o>=r-1||s>=t-1)return null;let u=new Uint8ClampedArray(36);for(let l=-1;l<=1;l++)for(let i=-1;i<=1;i++){let e=((s+l)*r+(o+i))*4,a=((l+1)*3+(i+1))*4;u[a]=c[e],u[a+1]=c[e+1],u[a+2]=c[e+2],u[a+3]=c[e+3]}return u}function O(n,o=500,s=.001,r=10){let{width:t,height:c,data:u}=n,l=[];for(let i=1;i<c-1;i++)for(let e=1;e<t-1;e++){let a=(i*t+e)*4;if(u[a]===0)continue;let f=v(n,e,i);if(!f)continue;let h=E(f);h!=="none"&&(l.some(m=>Math.abs(m.x-e)<r&&Math.abs(m.y-i)<r)||l.push({x:e,y:i,type:h}))}return l.slice(0,o)}function W(n,o=20){if(n.length===0)return[];let s=Math.min(o,n.length),r=[],t=new Set;for(;r.length<s;){let e=Math.floor(Math.random()*n.length);t.has(e)||(t.add(e),r.push({...n[e]}))}let c=!0,u=100,l=0,i=new Array(n.length).fill(-1);for(;c&&l<u;){c=!1,l++;for(let a=0;a<n.length;a++){let f=n[a],h=1/0,d=-1;for(let m=0;m<r.length;m++){let g=r[m],y=Math.sqrt(Math.pow(f.x-g.x,2)+Math.pow(f.y-g.y,2));y<h&&(h=y,d=m)}i[a]!==d&&(i[a]=d,c=!0)}let e=r.map(()=>({x:0,y:0,count:0}));for(let a=0;a<n.length;a++){let f=i[a];e[f].x+=n[a].x,e[f].y+=n[a].y,e[f].count++}for(let a=0;a<r.length;a++)e[a].count>0&&(r[a].x=Math.round(e[a].x/e[a].count),r[a].y=Math.round(e[a].y/e[a].count))}return r}function _(n,o,s=!0){if(!s)return;let{width:r,height:t,data:c}=n;for(let u of o){let{x:l,y:i}=u;if(l<0||i<0||l>=r||i>=t)continue;let e=v(n,l,i),a;if(!e)a=[0,165,255];else switch(E(e)){case"endpoint":a=[255,0,0];break;case"corner":a=[0,0,255];break;case"t_junction":a=[0,255,0];break;default:a=[0,165,255]}for(let f=-1;f<=1;f++)for(let h=-1;h<=1;h++){let d=l+h,m=i+f;if(d<0||m<0||d>=r||m>=t)continue;let g=(m*r+d)*4;c[g]=a[0],c[g+1]=a[1],c[g+2]=a[2]}}}function N(n,o=50,s=150){let{width:r,height:t,data:c}=n,u=new Uint8ClampedArray(r*t*4);for(let l=0;l<c.length;l+=4){let i=c[l]>0?255:0;u[l]=i,u[l+1]=i,u[l+2]=i,u[l+3]=255}return new ImageData(u,r,t)}function R(n,o=1,s=Math.PI/180,r=50,t=50,c=10){let{width:u,height:l,data:i}=n,e=Math.sqrt(u*u+l*l),a=Math.ceil(e/o),f=Math.ceil(Math.PI/s),h=Array(a*2).fill(null).map(()=>Array(f).fill(0));for(let m=0;m<l;m++)for(let g=0;g<u;g++){let y=(m*u+g)*4;if(i[y]!==0)for(let I=0;I<f;I++){let w=I*s,M=g*Math.cos(w)+m*Math.sin(w),x=Math.round((M+e)/o);x>=0&&x<a*2&&h[x][I]++}}let d=[];for(let m=0;m<a*2;m++)for(let g=0;g<f;g++)if(h[m][g]>=r){let y=g*s,I=m*o-e,w=Math.cos(y),M=Math.sin(y);if(Math.abs(M)>.001){let b=Math.round(I/M),D=u-1,p=Math.round((I-D*w)/M);b>=0&&b<l&&p>=0&&p<l&&d.push({x1:0,y1:b,x2:D,y2:p})}else if(Math.abs(w)>.001){let b=Math.round(I/w),D=l-1,p=Math.round((I-D*M)/w);b>=0&&b<u&&p>=0&&p<u&&d.push({x1:b,y1:0,x2:p,y2:D})}}return d.filter(m=>{let g=m.x2-m.x1,y=m.y2-m.y1;return Math.sqrt(g*g+y*y)>=t})}function K(n,o=50,s=50,r=10){let t=N(n,50,150);return R(t,1,Math.PI/180,o,s,r)}function Z(n,o,s=[0,255,0]){let{width:r,height:t,data:c}=n;for(let u of o){let{x1:l,y1:i,x2:e,y2:a}=u,f=l,h=i,d=Math.abs(e-l),m=Math.abs(a-i),g=l<e?1:-1,y=i<a?1:-1,I=d-m;for(;;){if(f>=0&&f<r&&h>=0&&h<t)for(let M=-1;M<=1;M++)for(let x=-1;x<=1;x++){let b=f+x,D=h+M;if(b>=0&&b<r&&D>=0&&D<t){let p=(D*r+b)*4;c[p]=s[0],c[p+1]=s[1],c[p+2]=s[2]}}if(f===e&&h===a)break;let w=2*I;w>-m&&(I-=m,f+=g),w<d&&(I+=d,h+=y)}}}export{N as cannyEdgeDetection,E as classifyPoint,W as clusterPoints,U as convertToGrayscale,O as detectCorners,K as detectStraightWallsHough,A as dilate,_ as drawClusteredPoints,Z as drawLines,P as erode,R as houghLinesP,T as imageToImageData,H as loadImage,B as morphologicalClose,k as morphologicalOpen,G as morphologicalThinning,j as renderImageDataToCanvas,V as skeletonizeImage,L as threshold};
//# sourceMappingURL=mod.js.map
