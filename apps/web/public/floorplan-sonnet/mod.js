// Floorplan Sonnet Library - Built with esbuild
function T(e){let r=document.createElement("canvas");r.width=e.width,r.height=e.height;let i=r.getContext("2d");if(!i)throw new Error("Could not get canvas context");return i.drawImage(e,0,0),i.getImageData(0,0,r.width,r.height)}function L(e){let{data:r,width:i,height:s}=e,t=new Uint8ClampedArray(i*s*4);for(let a=0;a<r.length;a+=4){let l=.299*r[a]+.587*r[a+1]+.114*r[a+2];t[a]=l,t[a+1]=l,t[a+2]=l,t[a+3]=r[a+3]}return new ImageData(t,i,s)}function U(e,r,i=!0){let{data:s,width:t,height:a}=e,l=new Uint8ClampedArray(t*a*4);for(let f=0;f<s.length;f+=4){let c=s[f],o=i?c<r?255:0:c>r?255:0;l[f]=o,l[f+1]=o,l[f+2]=o,l[f+3]=s[f+3]}return new ImageData(l,t,a)}function C(e,r=3){let{width:i,height:s}=e,t=new Uint8ClampedArray(i*s*4);t.set(e.data);let a=Math.floor(r/2),l=document.createElement("canvas");l.width=i,l.height=s;let f=l.getContext("2d");if(!f)throw new Error("Failed to get temporary canvas context");f.putImageData(e,0,0);let c=f.getImageData(0,0,i,s);for(let o=a;o<s-a;o++)for(let n=a;n<i-a;n++){let u=255;for(let g=-a;g<=a;g++)for(let h=-a;h<=a;h++){let d=((o+g)*i+(n+h))*4;u=Math.min(u,c.data[d])}let m=(o*i+n)*4;t[m]=u,t[m+1]=u,t[m+2]=u}return new ImageData(t,i,s)}function A(e,r=3){let{width:i,height:s}=e,t=new Uint8ClampedArray(i*s*4);t.set(e.data);let a=Math.floor(r/2),l=document.createElement("canvas");l.width=i,l.height=s;let f=l.getContext("2d");if(!f)throw new Error("Failed to get temporary canvas context");f.putImageData(e,0,0);let c=f.getImageData(0,0,i,s);for(let o=a;o<s-a;o++)for(let n=a;n<i-a;n++){let u=0;for(let g=-a;g<=a;g++)for(let h=-a;h<=a;h++){let d=((o+g)*i+(n+h))*4;u=Math.max(u,c.data[d])}let m=(o*i+n)*4;t[m]=u,t[m+1]=u,t[m+2]=u}return new ImageData(t,i,s)}function j(e,r=3){let i=C(e,r);return A(i,r)}function q(e,r=3){let i=A(e,r);return C(i,r)}function k(e){let{width:r,height:i}=e,s=new Uint8ClampedArray(r*i*4),t=new Uint8ClampedArray(e.data),a=!0;for(let c=0;c<t.length;c+=4)t[c]=t[c]>128?1:0,t[c+1]=t[c],t[c+2]=t[c],t[c+3]=255;let l=0,f=100;for(;a&&l<f;){a=!1;let c=[];for(let o=1;o<i-1;o++)for(let n=1;n<r-1;n++){let u=(o*r+n)*4;if(t[u]===0)continue;let m=((o-1)*r+n)*4,g=((o-1)*r+(n+1))*4,h=(o*r+(n+1))*4,d=((o+1)*r+(n+1))*4,x=((o+1)*r+n)*4,I=((o+1)*r+(n-1))*4,w=(o*r+(n-1))*4,b=((o-1)*r+(n-1))*4,p=[t[m],t[g],t[h],t[d],t[x],t[I],t[w],t[b]],M=p.reduce((y,P)=>y+P,0);if(M<2||M>6)continue;let D=0;for(let y=0;y<p.length;y++)p[y]===0&&p[(y+1)%p.length]===1&&D++;D===1&&t[m]*t[h]*t[x]===0&&t[h]*t[x]*t[w]===0&&(c.push(u),a=!0)}for(let o of c)t[o]=0,t[o+1]=0,t[o+2]=0;c.length=0;for(let o=1;o<i-1;o++)for(let n=1;n<r-1;n++){let u=(o*r+n)*4;if(t[u]===0)continue;let m=((o-1)*r+n)*4,g=((o-1)*r+(n+1))*4,h=(o*r+(n+1))*4,d=((o+1)*r+(n+1))*4,x=((o+1)*r+n)*4,I=((o+1)*r+(n-1))*4,w=(o*r+(n-1))*4,b=((o-1)*r+(n-1))*4,p=[t[m],t[g],t[h],t[d],t[x],t[I],t[w],t[b]],M=p.reduce((y,P)=>y+P,0);if(M<2||M>6)continue;let D=0;for(let y=0;y<p.length;y++)p[y]===0&&p[(y+1)%p.length]===1&&D++;D===1&&t[m]*t[h]*t[w]===0&&t[m]*t[x]*t[w]===0&&(c.push(u),a=!0)}for(let o of c)t[o]=0,t[o+1]=0,t[o+2]=0}for(let c=0;c<t.length;c+=4){let o=t[c]===1?255:0;s[c]=o,s[c+1]=o,s[c+2]=o,s[c+3]=255}return new ImageData(s,r,i)}async function O(e,r=100){let i=e instanceof HTMLImageElement?e:await B(e),s=i.width,t=i.height;console.log(`[DEBUG] Original (H\xD7W): ${t} \xD7 ${s}`);let a=T(i),l=L(a);console.log("[DEBUG] After grayscale conversion");let f=U(l,r,!0);console.log("[DEBUG] After threshold");let c=j(f,3);console.log("[DEBUG] After open");let o=q(c,3);console.log("[DEBUG] After close");let n=k(o);return console.log("[DEBUG] After thinning"),{skeleton:n,originalWidth:s,originalHeight:t,debugInfo:{thresholdValue:r}}}function B(e){return new Promise((r,i)=>{let s=new Image;s.onload=()=>r(s),s.onerror=()=>i(new Error("Failed to load image")),typeof e=="string"?s.src=e:s.src=URL.createObjectURL(e)})}function V(e,r){r.width=e.width,r.height=e.height;let i=r.getContext("2d");if(!i)throw new Error("Could not get canvas context");i.putImageData(e,0,0)}function E(e){let r;if(Array.isArray(e)){if(e.length!==3||e[0].length!==3)throw new Error("Neighborhood must be a 3x3 array");if((e[1][1]>0?1:0)===0)return"none";r=[e[0][1]>0?1:0,e[0][2]>0?1:0,e[1][2]>0?1:0,e[2][2]>0?1:0,e[2][1]>0?1:0,e[2][0]>0?1:0,e[1][0]>0?1:0,e[0][0]>0?1:0]}else{if(e.length!==36)throw new Error("Neighborhood must contain 9 pixels (36 values in RGBA format)");if((e[4*4+0]>0?1:0)===0)return"none";r=[e[4*1+0]>0?1:0,e[4*2+0]>0?1:0,e[4*5+0]>0?1:0,e[4*8+0]>0?1:0,e[4*7+0]>0?1:0,e[4*6+0]>0?1:0,e[4*3+0]>0?1:0,e[4*0+0]>0?1:0]}let i=r.reduce((a,l)=>a+l,0),s=0;for(let a=0;a<r.length;a++)r[a]===0&&r[(a+1)%r.length]===1&&s++;let t=r.join("")+r[0];if(i===1)return"endpoint";if(i===3&&(s===2||["10001000","01000100","00100010","00010001"].some(l=>t.includes(l))))return"t_junction";if(i===2){if(s===2){for(let l=0;l<r.length;l++)if(r[l]===1&&r[(l+1)%8]===1)return"none";return"corner"}if(["10000100","01000010","00100001","00010001"].some(l=>t.includes(l)))return"corner"}return i>=4&&s>=2?"t_junction":"none"}function v(e,r,i){let{width:s,height:t,data:a}=e;if(r<1||i<1||r>=s-1||i>=t-1)return null;let l=new Uint8ClampedArray(36);for(let f=-1;f<=1;f++)for(let c=-1;c<=1;c++){let o=((i+f)*s+(r+c))*4,n=((f+1)*3+(c+1))*4;l[n]=a[o],l[n+1]=a[o+1],l[n+2]=a[o+2],l[n+3]=a[o+3]}return l}function R(e,r=3e3,i=.001,s=3){let{width:t,height:a,data:l}=e,f=[];for(let c=1;c<a-1;c++)for(let o=1;o<t-1;o++){let n=(c*t+o)*4;if(l[n]===0)continue;let u=v(e,o,c);if(!u)continue;let m=E(u);m!=="none"&&(f.some(h=>{let d=Math.abs(h.x-o),x=Math.abs(h.y-c);return d<=s&&x<=s&&h.type===m})||f.push({x:o,y:c,type:m}))}return f.slice(0,r)}function W(e,r=50){if(e.length===0)return[];let i=Math.min(Math.max(r,20),Math.floor(e.length/2)),s=[],t=new Set;for(;s.length<i;){let n=Math.floor(Math.random()*e.length);t.has(n)||(t.add(n),s.push({...e[n]}))}let a=!0,l=100,f=0,c=new Array(e.length).fill(-1),o=s.map(()=>({x:0,y:0,count:0}));for(;a&&f<l;){a=!1,f++;for(let n=0;n<e.length;n++){let u=e[n],m=1/0,g=-1;for(let h=0;h<s.length;h++){let d=s[h],x=Math.sqrt(Math.pow(u.x-d.x,2)+Math.pow(u.y-d.y,2));x<m&&x<30&&(m=x,g=h)}c[n]!==g&&(c[n]=g,a=!0)}o.forEach(n=>{n.x=0,n.y=0,n.count=0});for(let n=0;n<e.length;n++){let u=c[n];u!==-1&&(o[u].x+=e[n].x,o[u].y+=e[n].y,o[u].count++)}for(let n=0;n<s.length;n++)o[n].count>0&&(s[n].x=Math.round(o[n].x/o[n].count),s[n].y=Math.round(o[n].y/o[n].count))}return s.filter((n,u)=>o[u].count>0)}function $(e,r,i=!0){if(!i)return;let{width:s,height:t,data:a}=e;for(let l of r){let{x:f,y:c}=l;if(f<0||c<0||f>=s||c>=t)continue;let o=v(e,f,c),n;if(!o)n=[0,165,255];else switch(E(o)){case"endpoint":n=[255,0,0];break;case"corner":n=[0,0,255];break;case"t_junction":n=[0,255,0];break;default:n=[0,165,255]}for(let u=-1;u<=1;u++)for(let m=-1;m<=1;m++){let g=f+m,h=c+u;if(g<0||h<0||g>=s||h>=t)continue;let d=(h*s+g)*4;a[d]=n[0],a[d+1]=n[1],a[d+2]=n[2]}}}function H(e,r=50,i=150){let{width:s,height:t,data:a}=e,l=new Uint8ClampedArray(s*t*4);for(let f=0;f<a.length;f+=4){let c=a[f]>0?255:0;l[f]=c,l[f+1]=c,l[f+2]=c,l[f+3]=255}return new ImageData(l,s,t)}function N(e,r=1,i=Math.PI/180,s=50,t=50,a=10){let{width:l,height:f,data:c}=e,o=Math.sqrt(l*l+f*f),n=Math.ceil(o/r),u=Math.ceil(Math.PI/i),m=Array(n*2).fill(null).map(()=>Array(u).fill(0));for(let h=0;h<f;h++)for(let d=0;d<l;d++){let x=(h*l+d)*4;if(c[x]!==0)for(let I=0;I<u;I++){let w=I*i,b=d*Math.cos(w)+h*Math.sin(w),p=Math.round((b+o)/r);p>=0&&p<n*2&&m[p][I]++}}let g=[];for(let h=0;h<n*2;h++)for(let d=0;d<u;d++)if(m[h][d]>=s){let x=d*i,I=h*r-o,w=Math.cos(x),b=Math.sin(x);if(Math.abs(b)>.001){let M=Math.round(I/b),D=l-1,y=Math.round((I-D*w)/b);M>=0&&M<f&&y>=0&&y<f&&g.push({x1:0,y1:M,x2:D,y2:y})}else if(Math.abs(w)>.001){let M=Math.round(I/w),D=f-1,y=Math.round((I-D*b)/w);M>=0&&M<l&&y>=0&&y<l&&g.push({x1:M,y1:0,x2:y,y2:D})}}return g.filter(h=>{let d=h.x2-h.x1,x=h.y2-h.y1;return Math.sqrt(d*d+x*x)>=t})}function G(e){let{width:r,height:i,data:s}=e,t=[];for(let a=0;a<i;a++)for(let l=0;l<r;l++){let f=(a*r+l)*4;s[f]>0&&t.push({x:l,y:a})}return t}function F(e,r=5){if(e.length<2)return[];let i=[],s=new Set;for(let t=0;t<e.length;t++){if(s.has(t))continue;let a=e[t];s.add(t);for(let l=0;l<Math.PI;l+=Math.PI/16){let f=Math.cos(l),c=Math.sin(l),o=[a];for(let n=0;n<e.length;n++){if(t===n||s.has(n))continue;let u=e[n],m=u.x-a.x,g=u.y-a.y,h=m*f+g*c;Math.abs(m*c-g*f)<=r&&o.push(u)}if(o.length>=3){o.sort((m,g)=>{let h=(m.x-a.x)*f+(m.y-a.y)*c,d=(g.x-a.x)*f+(g.y-a.y)*c;return h-d});let n=o[0],u=o[o.length-1];for(let m=1;m<o.length-1;m++){let g=e.findIndex(h=>h.x===o[m].x&&h.y===o[m].y);g>=0&&s.add(g)}i.push({x1:n.x,y1:n.y,x2:u.x,y2:u.y});break}}}return i}function X(e,r=50,i=50,s=10,t=[]){if(t.length>=2){let c=[],o=s*3,n=(u,m)=>{let g=m.x-u.x,h=m.y-u.y,d=Math.sqrt(g*g+h*h),x=Math.max(5,Math.ceil(d/5)),I=0;for(let w=0;w<=x;w++){let b=w/x,p=Math.round(u.x+b*g),M=Math.round(u.y+b*h);if(p>=0&&p<e.width&&M>=0&&M<e.height){let D=(M*e.width+p)*4;e.data[D]>0&&I++}}return I>=x*.4};for(let u=0;u<t.length;u++)for(let m=u+1;m<t.length;m++){let g=t[u],h=t[m];Math.sqrt((h.x-g.x)**2+(h.y-g.y)**2)<=o&&n(g,h)&&c.push({x1:g.x,y1:g.y,x2:h.x,y2:h.y})}if(c.length>0)return console.log(`[INFO] Generated ${c.length} lines using corner points directly`),c}let a=G(e);if(a.length>0){let c=Math.max(2,Math.min(5,s/2)),n=F(a,c).filter(u=>{let m=u.x2-u.x1,g=u.y2-u.y1;return Math.sqrt(m*m+g*g)>=i});if(console.log(`[INFO] Connected ${n.length} wall lines from ${a.length} points`),n.length>=3)return n}console.log("[INFO] Falling back to Hough transform for line detection");let l=H(e,50,150);return N(l,1,Math.PI/180,r,i,s)}function Z(e,r,i=[0,255,0]){let{width:s,height:t,data:a}=e;for(let l of r){let{x1:f,y1:c,x2:o,y2:n}=l,u=f,m=c,g=Math.abs(o-f),h=Math.abs(n-c),d=f<o?1:-1,x=c<n?1:-1,I=g-h;for(;;){if(u>=0&&u<s&&m>=0&&m<t)for(let b=-1;b<=1;b++)for(let p=-1;p<=1;p++){let M=u+p,D=m+b;if(M>=0&&M<s&&D>=0&&D<t){let y=(D*s+M)*4;a[y]=i[0],a[y+1]=i[1],a[y+2]=i[2]}}if(u===o&&m===n)break;let w=2*I;w>-h&&(I-=h,u+=d),w<g&&(I+=g,m+=x)}}}export{H as cannyEdgeDetection,E as classifyPoint,W as clusterPoints,F as connectWallPoints,L as convertToGrayscale,R as detectCorners,X as detectStraightWallsHough,A as dilate,$ as drawClusteredPoints,Z as drawLines,C as erode,N as houghLinesP,T as imageToImageData,B as loadImage,q as morphologicalClose,j as morphologicalOpen,k as morphologicalThinning,V as renderImageDataToCanvas,O as skeletonizeImage,U as threshold};
//# sourceMappingURL=mod.js.map
